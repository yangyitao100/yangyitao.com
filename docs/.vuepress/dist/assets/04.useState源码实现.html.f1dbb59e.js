import{_ as n,o as s,c as a,f as t}from"./app.a186c370.js";const p={},e=t(`<h1 id="_04-usestate源码实现" tabindex="-1"><a class="header-anchor" href="#_04-usestate源码实现" aria-hidden="true">#</a> 04.useState源码实现</h1><p>代码演化过程见视频，这里只呈现相关代码：</p><h2 id="hooks-js" tabindex="-1"><a class="header-anchor" href="#hooks-js" aria-hidden="true">#</a> hooks.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>emitUpdateForHooks <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./react-dom&#39;</span>
<span class="token keyword">let</span> states <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> hookIndex <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resetHookIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  hookIndex <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  states<span class="token punctuation">[</span>hookIndex<span class="token punctuation">]</span> <span class="token operator">=</span> states<span class="token punctuation">[</span>hookIndex<span class="token punctuation">]</span> <span class="token operator">||</span> initialValue<span class="token punctuation">;</span>
  <span class="token keyword">const</span> currentIndex <span class="token operator">=</span> hookIndex<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    states<span class="token punctuation">[</span>currentIndex<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    <span class="token function">emitUpdateForHooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>states<span class="token punctuation">[</span>hookIndex<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> setState<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="react-dom-js" tabindex="-1"><a class="header-anchor" href="#react-dom-js" aria-hidden="true">#</a> react-dom.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> resetHookIndex <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hooks&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">let</span> emitUpdateForHooks<span class="token punctuation">;</span>
<span class="token keyword">let</span> isHooksUpdated <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">VNode<span class="token punctuation">,</span> containerDOM</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token function-variable function">emitUpdateForHooks</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isHooksUpdated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isHooksUpdated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                isHooksUpdated <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token function">resetHookIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
                <span class="token function">updateDomTree</span><span class="token punctuation">(</span>VNode<span class="token punctuation">,</span> VNode<span class="token punctuation">,</span> <span class="token function">findDomByVNode</span><span class="token punctuation">(</span>VNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getDomByFunctionComponent</span><span class="token punctuation">(</span><span class="token parameter">VNode</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> props<span class="token punctuation">}</span> <span class="token operator">=</span> VNode
    <span class="token keyword">let</span> renderVNode <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>renderVNode<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    VNode<span class="token punctuation">.</span>oldRenderVNode <span class="token operator">=</span> renderVNode <span class="token comment">/////</span>
    <span class="token keyword">let</span> dom <span class="token operator">=</span> <span class="token function">createDOM</span><span class="token punctuation">(</span>renderVNode<span class="token punctuation">)</span>
    VNode<span class="token punctuation">.</span>dom <span class="token operator">=</span> dom
    <span class="token keyword">return</span> dom
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mountArray</span><span class="token punctuation">(</span><span class="token parameter">children<span class="token punctuation">,</span> parent</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">///</span>
            children<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">///</span>
            i<span class="token operator">--</span><span class="token comment">///</span>
            <span class="token keyword">continue</span><span class="token comment">///</span>
        <span class="token punctuation">}</span><span class="token comment">////</span>
        children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>index <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token function">mount</span><span class="token punctuation">(</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> parent<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span><span class="token parameter">parentDOM<span class="token punctuation">,</span> oldVNodeChildren<span class="token punctuation">,</span> newVNodeChildren</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
    newVNodeChildren<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newVNode<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        newVNode<span class="token punctuation">.</span>index <span class="token operator">=</span> index
        <span class="token keyword">let</span> newKey <span class="token operator">=</span> newVNode<span class="token punctuation">.</span>key <span class="token operator">?</span> newVNode<span class="token punctuation">.</span>key <span class="token operator">:</span> index<span class="token punctuation">;</span>
        <span class="token keyword">let</span> oldVNode <span class="token operator">=</span> oldKeyChildMap<span class="token punctuation">[</span>newKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">////////////////////</span>
            <span class="token function">updateDomTree</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> <span class="token function">findDomByVNode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/////</span>
            <span class="token comment">// ....</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="react-js" tabindex="-1"><a class="header-anchor" href="#react-js" aria-hidden="true">#</a> react.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./hooks&#39;</span> <span class="token comment">////</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","04.useState源码实现.html.vue"]]);export{k as default};
