import{_ as n,o as s,c as a,f as e}from"./app.4326c516.js";const t={},p=e(`<h1 id="useeffect挂载实现" tabindex="-1"><a class="header-anchor" href="#useeffect挂载实现" aria-hidden="true">#</a> useEffect挂载实现</h1><h2 id="packages-react-src-reacthooks-js" tabindex="-1"><a class="header-anchor" href="#packages-react-src-reacthooks-js" aria-hidden="true">#</a> packages/react/src/ReactHooks.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token parameter">create</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dispatcher <span class="token operator">=</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dispatcher<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span>create<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-src-react-js" tabindex="-1"><a class="header-anchor" href="#packages-react-src-react-js" aria-hidden="true">#</a> packages/react/src/React.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useReducer<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./ReactHooks&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ReactSharedInternals <span class="token keyword">from</span> <span class="token string">&#39;./ReactSharedInternals&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>
  useReducer<span class="token punctuation">,</span>
  useState<span class="token punctuation">,</span>
  useEffect<span class="token punctuation">,</span>
  ReactSharedInternals <span class="token keyword">as</span> __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-index-js" tabindex="-1"><a class="header-anchor" href="#packages-react-index-js" aria-hidden="true">#</a> packages/react/index.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token punctuation">{</span> 
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED<span class="token punctuation">,</span>
    useState<span class="token punctuation">,</span>
    useReducer<span class="token punctuation">,</span>
    useEffect
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-reconciler-src-reactfiberhooks-js" tabindex="-1"><a class="header-anchor" href="#packages-react-reconciler-src-reactfiberhooks-js" aria-hidden="true">#</a> packages/react-reconciler/src/ReactFiberHooks.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Passive <span class="token keyword">as</span> PassiveEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./ReactFiberFlags&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HasEffect <span class="token keyword">as</span> HookHasEffect<span class="token punctuation">,</span> Passive <span class="token keyword">as</span> HookPassive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./ReactHookEffectTags&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> HooksDispatcherOnMount <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">useReducer</span><span class="token operator">:</span> mountReducer<span class="token punctuation">,</span>  <span class="token comment">// 在mount期间，使用mountReducer处理useReducer</span>
  <span class="token literal-property property">useState</span><span class="token operator">:</span> mountState<span class="token punctuation">,</span>
  <span class="token literal-property property">useEffect</span><span class="token operator">:</span> mountEffect
<span class="token punctuation">}</span>
<span class="token keyword">const</span> HooksDispatcherOnUpdate <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">useReducer</span><span class="token operator">:</span> updateReducer<span class="token punctuation">,</span>
  <span class="token literal-property property">useState</span><span class="token operator">:</span> updateState<span class="token punctuation">,</span>
  <span class="token literal-property property">useEffect</span><span class="token operator">:</span> updateEffect
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">mountEffect</span><span class="token punctuation">(</span><span class="token parameter">create<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">mountEffectImpl</span><span class="token punctuation">(</span>PassiveEffect<span class="token punctuation">,</span> HookPassive<span class="token punctuation">,</span> create<span class="token punctuation">,</span> deps<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mountEffectImpl</span><span class="token punctuation">(</span><span class="token parameter">fiberFlags<span class="token punctuation">,</span> hookFlags<span class="token punctuation">,</span> create<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
  currentlyRenderingFiber<span class="token punctuation">.</span>flags <span class="token operator">|=</span> fiberFlags<span class="token punctuation">;</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>HookHasEffect <span class="token operator">|</span> hookFlags<span class="token punctuation">,</span> create<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> nextDeps<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> effect <span class="token operator">=</span> <span class="token punctuation">{</span>
    tag<span class="token punctuation">,</span>
    create<span class="token punctuation">,</span>
    destroy<span class="token punctuation">,</span>
    deps<span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> componentUpdateQueue <span class="token operator">=</span> currentlyRenderingFiber<span class="token punctuation">.</span>updateQueue<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>componentUpdateQueue <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    componentUpdateQueue <span class="token operator">=</span> <span class="token function">createFunctionComponentUpdateQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    currentlyRenderingFiber<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> componentUpdateQueue<span class="token punctuation">;</span>
    componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lastEffect <span class="token operator">=</span> componentUpdateQueue<span class="token punctuation">.</span>lastEffect<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastEffect <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> firstEffect <span class="token operator">=</span> lastEffect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      lastEffect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
      effect<span class="token punctuation">.</span>next <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
      componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> effect<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createFunctionComponentUpdateQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lastEffect</span><span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-reconciler-src-reactfiberflags-js" tabindex="-1"><a class="header-anchor" href="#packages-react-reconciler-src-reactfiberflags-js" aria-hidden="true">#</a> packages/react-reconciler/src/ReactFiberFlags.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> Passive <span class="token operator">=</span> <span class="token number">0b00000000000000010000000000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="packages-react-reconciler-src-reacthookeffecttags-js" tabindex="-1"><a class="header-anchor" href="#packages-react-reconciler-src-reacthookeffecttags-js" aria-hidden="true">#</a> packages/react-reconciler/src/ReactHookEffectTags.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> NoFlags <span class="token operator">=</span> <span class="token number">0b0000</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> HasEffect <span class="token operator">=</span> <span class="token number">0b0001</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> Layout <span class="token operator">=</span> <span class="token number">0b0100</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> Passive <span class="token operator">=</span> <span class="token number">0b1000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),c=[p];function o(i,l){return s(),a("div",null,c)}const u=n(t,[["render",o],["__file","07.useEffect挂载实现.html.vue"]]);export{u as default};
