import{_ as n,o as s,c as a,f as t}from"./app.c996eb5c.js";const p={},e=t(`<h1 id="_09-getderivestatefromprops源码实现" tabindex="-1"><a class="header-anchor" href="#_09-getderivestatefromprops源码实现" aria-hidden="true">#</a> 09.getDeriveStateFromProps源码实现</h1><p>代码演化请观看视频，这里呈现相关代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Component.js</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token constant">IS_CLASS_COMPONENT</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>updater <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Updater</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props
    <span class="token punctuation">}</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">partialState</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// // 1.合并属性</span>
        <span class="token comment">// this.state = {...this.state, ...partialState}</span>
        <span class="token comment">// // 2.重新渲染进行更新</span>
        <span class="token comment">// this.update()</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">addState</span><span class="token punctuation">(</span>partialState<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 1. 获取重新执行render函数后的虚拟DOM 新虚拟DOM</span>
        <span class="token comment">// 2. 根据新虚拟DOM生成新的真实DOM</span>
        <span class="token comment">// 3. 将真实DOM挂载到页面上</span>
        <span class="token keyword">let</span> oldVNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>oldVNode<span class="token punctuation">;</span> <span class="token comment">// TODO: 让类组件拥有一个oldVNode属性保存类组件实例对应的的虚拟DOM</span>
        <span class="token keyword">let</span> oldDOM <span class="token operator">=</span> <span class="token function">findDomByVNode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span> <span class="token comment">// TODO: 将真实DOM保存到对应的虚拟DOM上  </span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>getDerivedStateFromProps<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">///</span>
            <span class="token keyword">let</span> newState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span><span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">///</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token operator">...</span>newState <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">///</span>
        <span class="token punctuation">}</span><span class="token comment">///</span>
        <span class="token keyword">let</span> newVNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">updateDomTree</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> oldDOM<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>oldVNode <span class="token operator">=</span> newVNode
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>componentDidUpdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getDomByClassComponent</span><span class="token punctuation">(</span><span class="token parameter">VNode</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> props<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token operator">=</span> VNode
    <span class="token keyword">let</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">type</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>
    <span class="token keyword">let</span> renderVNode <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    instance<span class="token punctuation">.</span>oldVNode <span class="token operator">=</span> renderVNode
    VNode<span class="token punctuation">.</span>classInstance <span class="token operator">=</span> instance <span class="token comment">///</span>
    ref <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>ref<span class="token punctuation">.</span>current <span class="token operator">=</span> instance<span class="token punctuation">)</span>
    <span class="token comment">// TODO: 需要删除的代码 start</span>
    <span class="token comment">// setTimeout(()=&gt;{</span>
    <span class="token comment">//     instance.setState({xxx: &#39;999999999999&#39;})</span>
    <span class="token comment">// }, 3000)</span>
    <span class="token comment">// TODO: 需要删除的代码 end</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>renderVNode<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">let</span> dom <span class="token operator">=</span> <span class="token function">createDOM</span><span class="token punctuation">(</span>renderVNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">.</span>componentDidMount<span class="token punctuation">)</span> instance<span class="token punctuation">.</span><span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dom
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","09.getDeriveStateFromProps源码实现.html.vue"]]);export{k as default};
