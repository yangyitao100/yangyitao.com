import{_ as n,o as s,c as a,f as t}from"./app.03bf752b.js";const p={},o=t(`<h1 id="_08-useeffect及uselayouteffect源码实现" tabindex="-1"><a class="header-anchor" href="#_08-useeffect及uselayouteffect源码实现" aria-hidden="true">#</a> 08.useEffect及useLayoutEffect源码实现</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token parameter">effectFunction<span class="token punctuation">,</span> deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> currentIndex <span class="token operator">=</span> hookIndex<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>destroyFunction<span class="token punctuation">,</span> preDeps<span class="token punctuation">]</span> <span class="token operator">=</span> states<span class="token punctuation">[</span>hookIndex<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>states<span class="token punctuation">[</span>hookIndex<span class="token punctuation">]</span> <span class="token operator">||</span> deps<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">!==</span> preDeps<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      destroyFunction <span class="token operator">&amp;&amp;</span> <span class="token function">destroyFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      states<span class="token punctuation">[</span>currentIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">effectFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> deps<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  hookIndex<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useLayoutEffect</span><span class="token punctuation">(</span><span class="token parameter">effectFunction<span class="token punctuation">,</span> deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> currentIndex <span class="token operator">=</span> hookIndex<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>destroyFunction<span class="token punctuation">,</span> preDeps<span class="token punctuation">]</span> <span class="token operator">=</span> states<span class="token punctuation">[</span>hookIndex<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>states<span class="token punctuation">[</span>hookIndex<span class="token punctuation">]</span> <span class="token operator">||</span> deps<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">!==</span> preDeps<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      destroyFunction <span class="token operator">&amp;&amp;</span> <span class="token function">destroyFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      states<span class="token punctuation">[</span>currentIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">effectFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> deps<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  hookIndex<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(u,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","08.useEffect及useLayoutEffect源码实现.html.vue"]]);export{k as default};
