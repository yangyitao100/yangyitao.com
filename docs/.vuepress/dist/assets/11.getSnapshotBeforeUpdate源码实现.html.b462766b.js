import{_ as n,o as s,c as a,f as t}from"./app.a186c370.js";const p={},e=t(`<h1 id="_11-getsnapshotbeforeupdate源码实现" tabindex="-1"><a class="header-anchor" href="#_11-getsnapshotbeforeupdate源码实现" aria-hidden="true">#</a> 11.getSnapshotBeforeUpdate源码实现</h1><p>代码演化请观看视频，这里呈现相关代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token function">getType</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">let</span> resultValue<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;array&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> data<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;array&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        resultValue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
            resultValue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">deepClone</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span><span class="token punctuation">)</span>    
        <span class="token keyword">return</span> resultValue<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        resultValue <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                resultValue<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span> 
        <span class="token keyword">return</span> resultValue<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> toString <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">;</span>
    <span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;[object Boolean]&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object Number]&#39;</span>  <span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object String]&#39;</span>  <span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object Function]&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object Array]&#39;</span>  <span class="token operator">:</span> <span class="token string">&#39;array&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object Date]&#39;</span>   <span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object RegExp]&#39;</span>  <span class="token operator">:</span> <span class="token string">&#39;regExp&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object Undefined]&#39;</span><span class="token operator">:</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;[object Null]&#39;</span>   <span class="token operator">:</span> <span class="token string">&#39;null&#39;</span><span class="token punctuation">,</span> 
      <span class="token string-property property">&#39;[object Object]&#39;</span>  <span class="token operator">:</span> <span class="token string">&#39;object&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> map<span class="token punctuation">[</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Componet.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> deepClone <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">Updater</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">ClassComponentInstance</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ClassComponentInstance <span class="token operator">=</span> ClassComponentInstance
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token function">addState</span><span class="token punctuation">(</span><span class="token parameter">partialState</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>partialState<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preHandleForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">preHandleForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>updaterQueue<span class="token punctuation">.</span>isBatch<span class="token punctuation">)</span><span class="token punctuation">{</span>
            updaterQueue<span class="token punctuation">.</span>updaters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">launchUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">launchUpdate</span><span class="token punctuation">(</span><span class="token parameter">nextProps</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> ClassComponentInstance<span class="token punctuation">,</span> pendingStates <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
        <span class="token keyword">let</span> prevProps <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ClassComponentInstance<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token comment">///</span>
        <span class="token keyword">let</span> prevState <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ClassComponentInstance<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token comment">///</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pendingStates<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>  <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>nextProps<span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">let</span> isShouldUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> nextState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">preState<span class="token punctuation">,</span> newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>preState<span class="token punctuation">,</span> <span class="token operator">...</span>newState
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ClassComponentInstance<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ClassComponentInstance<span class="token punctuation">.</span>shouldComponentUpdate <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>ClassComponentInstance<span class="token punctuation">.</span><span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">,</span> nextState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isShouldUpdate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span> ClassComponentInstance<span class="token punctuation">.</span>props <span class="token operator">=</span> nextProps
        ClassComponentInstance<span class="token punctuation">.</span>state <span class="token operator">=</span> nextState
        <span class="token keyword">if</span><span class="token punctuation">(</span>isShouldUpdate<span class="token punctuation">)</span> ClassComponentInstance<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>prevProps<span class="token punctuation">,</span> prevState<span class="token punctuation">)</span> <span class="token comment">///</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token constant">IS_CLASS_COMPONENT</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>updater <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Updater</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props
    <span class="token punctuation">}</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">partialState</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// // 1.合并属性</span>
        <span class="token comment">// this.state = {...this.state, ...partialState}</span>
        <span class="token comment">// // 2.重新渲染进行更新</span>
        <span class="token comment">// this.update()</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">addState</span><span class="token punctuation">(</span>partialState<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">prevProps<span class="token punctuation">,</span> prevState</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">///</span>
        <span class="token comment">// 1. 获取重新执行render函数后的虚拟DOM 新虚拟DOM</span>
        <span class="token comment">// 2. 根据新虚拟DOM生成新的真实DOM</span>
        <span class="token comment">// 3. 将真实DOM挂载到页面上</span>
        <span class="token keyword">let</span> oldVNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>oldVNode<span class="token punctuation">;</span> <span class="token comment">// TODO: 让类组件拥有一个oldVNode属性保存类组件实例对应的的虚拟DOM</span>
        <span class="token keyword">let</span> oldDOM <span class="token operator">=</span> <span class="token function">findDomByVNode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span> <span class="token comment">// TODO: 将真实DOM保存到对应的虚拟DOM上  </span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>getDerivedStateFromProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> newState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span><span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token operator">...</span>newState <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> snapshot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getSnapshotBeforeUpdate <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSnapshotBeforeUpdate</span><span class="token punctuation">(</span>prevProps<span class="token punctuation">,</span> prevState<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">///</span>
        <span class="token keyword">let</span> newVNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">updateDomTree</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">,</span> oldDOM<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>oldVNode <span class="token operator">=</span> newVNode
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>componentDidUpdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">///</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","11.getSnapshotBeforeUpdate源码实现.html.vue"]]);export{k as default};
