import{_ as o}from"./dom-diff.c1276538.js";import{_ as n}from"./domdiff.75c34fce.js";import{_ as l}from"./change.ff8abb3a.js";import{_ as h}from"./hook.3b22adc6.js";import{_ as c,r as s,o as d,c as p,b as e,d as a,e as i,f as t}from"./app.d90d410b.js";const f={},u=t('<h1 id="课程介绍" tabindex="-1"><a class="header-anchor" href="#课程介绍" aria-hidden="true">#</a> 课程介绍</h1><h2 id="课程目标" tabindex="-1"><a class="header-anchor" href="#课程目标" aria-hidden="true">#</a> 课程目标</h2><ul><li>在<strong>宏观上</strong>，掌握React18源码结构和<strong>核心概念</strong></li><li>在<strong>微观上</strong>，掌握React18源码的<strong>实现细节</strong></li></ul><h2 id="配套资料" tabindex="-1"><a class="header-anchor" href="#配套资料" aria-hidden="true">#</a> 配套资料</h2>',4),b={href:"https://coding.imooc.com/class/650.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://git.imooc.com/coding-650",target:"_blank",rel:"noopener noreferrer"},g={href:"https://reactjs.org/",target:"_blank",rel:"noopener noreferrer"},m=t('<blockquote><p>视频中有些地方直接访问了官方文档的地址，但官方文档进行了更新，界面发生了不少变化，但并不影响我们的学习</p></blockquote><p>本<strong>电子书教程主要承载一些理论知识</strong>，以及一些关键概念和参考资料，和视频小节一一对应，<strong>视频主要承载代码的演化过程</strong>。</p><h2 id="知识范围" tabindex="-1"><a class="header-anchor" href="#知识范围" aria-hidden="true">#</a> 知识范围</h2><p>我们可以将本课程源码学习的知识范围总结为三大块内容：</p><ul><li>React核心原理</li><li>React事件与状态管理</li><li>React架构</li></ul><h3 id="react核心原理" tabindex="-1"><a class="header-anchor" href="#react核心原理" aria-hidden="true">#</a> React核心原理</h3><p>React核心原理相关知识，是指React不会轻易发生变化的内容，是其之所以存在的基础原理：</p><ul><li>组件生命周期</li><li>虚拟DOM实现</li><li>Diff算法</li><li>组件渲染与更新</li><li>Hooks机制</li></ul><blockquote><p>这些内容除了Hooks，可以说是React一诞生到现在都存在的东西，甚至是Hooks也可以认为是函数组件的增强，从这个角度讲，也能说是一开始就存在的内容。</p></blockquote><h3 id="react事件与状态管理" tabindex="-1"><a class="header-anchor" href="#react事件与状态管理" aria-hidden="true">#</a> React事件与状态管理</h3><p>至于React事件与状态管理，可以理解为和用户的交互相关的内容，包括：</p><ul><li>事件代理机制</li><li>自定义事件系统</li><li>setState工作原理</li><li>状态更新处理</li><li>props与state</li></ul><h3 id="react架构" tabindex="-1"><a class="header-anchor" href="#react架构" aria-hidden="true">#</a> React架构</h3><p>至于React架构，可以说是React18最重要的组成部分，我们前面说<strong>React核心原理</strong>部分的内容是不会轻易发生变化的，那React架构则是与时俱进的，对于React18来讲，React架构包括的主要知识点如下：</p><ul><li>Fiber系统</li><li>Concurrent模式</li><li>Lane模型</li><li>调度系统</li><li>时间切片</li></ul><h2 id="课程安排" tabindex="-1"><a class="header-anchor" href="#课程安排" aria-hidden="true">#</a> 课程安排</h2><p>课程总体上采取了自行向下的授课方法，体现在我们的课程分为上下两个部分，上半部分手写手写实现了一个最精简的贴合React最初形态的版本，这帮助我们树立了基本的React世界观。有了这个认知，我们再手写实现相对复杂的React18源码，理解起来更容易接受。</p><h2 id="讲授方式" tabindex="-1"><a class="header-anchor" href="#讲授方式" aria-hidden="true">#</a> 讲授方式</h2><p>在具体的章节内容的讲解过程中，采取了理论实践相结合的讲课方法，先从原理上剖析再进入实现细节，由浅入深，遵循着应用实践-&gt;原理剖析-&gt;源码实现的讲述过程，即从实践中来，再到实践中去，比如先用一个应用案例来展示某一个功能的效果，然后剖析其底层原理，最后实现该部分源码。希望通过这样的授课方法，能够让大家更容易理解相对复杂的源码内容。</p><h2 id="课程收获" tabindex="-1"><a class="header-anchor" href="#课程收获" aria-hidden="true">#</a> 课程收获</h2><ul><li>对React的理解更加深刻，面试更具竞争力</li><li>快速定位工作中遇见的bug，提升工作效率</li><li>个人技术整体实力提升</li><li>掌握读源码的方法，具备写源码的能力</li></ul><h2 id="学习前提" tabindex="-1"><a class="header-anchor" href="#学习前提" aria-hidden="true">#</a> 学习前提</h2><p>学习这门课程需要具备一些前提条件，比如：</p><ul><li>具备React事件经验</li><li>有原生JavaScript功底</li><li>热爱前端开发，有探究精神</li></ul><h2 id="课程优势" tabindex="-1"><a class="header-anchor" href="#课程优势" aria-hidden="true">#</a> 课程优势</h2><p>市面上有那么多源码剖析相关资料，为什么选择这门课，选择这门课程有什么样的优势呢？</p><ul><li>课程有深度，从0到1手写实现与官方源码相近的代码，而不是简单的demo级代码，可以说最顶级的源码学习方式</li><li>注重总结源码背后的规律，授人以鱼，也授人以渔，比如在学习Fiber架构的时候，会分析性能在软件开发中的深刻意义（CPU、GPU资源的有限性），浏览器的渲染原理，不仅知道Fiber架构是什么，还要知道为什么有Fiber架构，又比如讲到任务优先级的时候，会从数据结构的角度进行分析，等等</li><li>本电子书作为教材，辅助视频学习</li><li>课程内容会随着React版本升级而更新，未来也会扩展更多内容</li></ul><h2 id="课程风采展示" tabindex="-1"><a class="header-anchor" href="#课程风采展示" aria-hidden="true">#</a> 课程风采展示</h2><h3 id="老版本的domdiff示意图" tabindex="-1"><a class="header-anchor" href="#老版本的domdiff示意图" aria-hidden="true">#</a> <strong>老版本的DOMDIFF示意图</strong></h3><p><img src="'+o+'" alt="老版本的DOMDIFF示意图"></p><h3 id="react18fiber架构下的domdiff流程图" tabindex="-1"><a class="header-anchor" href="#react18fiber架构下的domdiff流程图" aria-hidden="true">#</a> <strong>React18Fiber架构下的DOMDIFF流程图</strong></h3><p><img src="'+n+'" alt="新版本的DOMDIFF流程图"></p><h3 id="fiber树的演化" tabindex="-1"><a class="header-anchor" href="#fiber树的演化" aria-hidden="true">#</a> <strong>Fiber树的演化</strong></h3><p><img src="'+l+'" alt="Fiber树的演化"></p><h3 id="fiber架构下的hooks示意图" tabindex="-1"><a class="header-anchor" href="#fiber架构下的hooks示意图" aria-hidden="true">#</a> <strong>Fiber架构下的Hooks示意图</strong></h3><p><img src="'+h+'" alt="Fiber架构下的Hooks示意图"></p><h2 id="版权声明" tabindex="-1"><a class="header-anchor" href="#版权声明" aria-hidden="true">#</a> 版权声明</h2><p>作者: <strong>杨艺韬</strong></p>',38),R={href:"https://creativecommons.org/licenses/by-nc-nd/4.0/",target:"_blank",rel:"noopener noreferrer"};function x(k,F){const r=s("ExternalLinkIcon");return d(),p("div",null,[u,e("p",null,[a("视频："),e("a",b,[a("React18内核探秘：手写React高质量源码迈向高阶开发"),i(r)])]),e("p",null,[a("代码："),e("a",_,[a("仓库地址，需先购买视频课程"),i(r)])]),e("p",null,[a("文档："),e("a",g,[a("官方文档"),i(r)])]),m,e("p",null,[a("授权: "),e("a",R,[a("署名—非商业性使用—禁止演绎 4.0 国际（CC BY-NC-ND 4.0)"),i(r)])])])}const H=c(f,[["render",x],["__file","index.html.vue"]]);export{H as default};
