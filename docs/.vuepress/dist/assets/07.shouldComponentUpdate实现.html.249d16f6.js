import{_ as n,o as s,c as a,f as t}from"./app.d86bc82c.js";const p={},e=t(`<h1 id="_07-shouldcomponentupdate实现" tabindex="-1"><a class="header-anchor" href="#_07-shouldcomponentupdate实现" aria-hidden="true">#</a> 07.shouldComponentUpdate实现</h1><p>代码演化请观看视频，这里呈现相关代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Component.js</span>
<span class="token keyword">class</span> <span class="token class-name">Updater</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">ClassComponentInstance</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ClassComponentInstance <span class="token operator">=</span> ClassComponentInstance
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token function">addState</span><span class="token punctuation">(</span><span class="token parameter">partialState</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>partialState<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preHandleForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">preHandleForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>updaterQueue<span class="token punctuation">.</span>isBatch<span class="token punctuation">)</span><span class="token punctuation">{</span>
            updaterQueue<span class="token punctuation">.</span>updaters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">launchUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">launchUpdate</span><span class="token punctuation">(</span><span class="token parameter">nextProps</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">////</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> ClassComponentInstance<span class="token punctuation">,</span> pendingStates <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pendingStates<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>  <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>nextProps<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token comment">///</span>
        <span class="token keyword">let</span> isShouldUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">///</span>
        <span class="token keyword">let</span> nextState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">preState<span class="token punctuation">,</span> newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">///</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>preState<span class="token punctuation">,</span> <span class="token operator">...</span>newState
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ClassComponentInstance<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ClassComponentInstance<span class="token punctuation">.</span>shouldComponentUpdate <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>ClassComponentInstance<span class="token punctuation">.</span><span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">,</span> nextState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">///</span>
            isShouldUpdate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">///</span>
        <span class="token punctuation">}</span><span class="token comment">///</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingStates<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span> ClassComponentInstance<span class="token punctuation">.</span>props <span class="token operator">=</span> nextProps<span class="token comment">///</span>
        ClassComponentInstance<span class="token punctuation">.</span>state <span class="token operator">=</span> nextState<span class="token comment">///</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>isShouldUpdate<span class="token punctuation">)</span> ClassComponentInstance<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">///</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// react-dom.js</span>
<span class="token keyword">function</span> <span class="token function">updateClassComponent</span><span class="token punctuation">(</span><span class="token parameter">oldVNode<span class="token punctuation">,</span> newVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> classInstance <span class="token operator">=</span> newVNode<span class="token punctuation">.</span>classInstance <span class="token operator">=</span> oldVNode<span class="token punctuation">.</span>classInstance<span class="token punctuation">;</span>
    classInstance<span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">launchUpdate</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">///</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","07.shouldComponentUpdate实现.html.vue"]]);export{k as default};
