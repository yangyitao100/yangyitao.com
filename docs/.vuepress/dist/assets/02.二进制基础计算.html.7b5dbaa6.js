import{_ as s,o as a,c as n,f as p}from"./app.d86bc82c.js";const e={},o=p(`<h2 id="理解下面这个函数的计算" tabindex="-1"><a class="header-anchor" href="#理解下面这个函数的计算" aria-hidden="true">#</a> 理解下面这个函数的计算</h2><h2 id="关于js中数字的位数" tabindex="-1"><a class="header-anchor" href="#关于js中数字的位数" aria-hidden="true">#</a> 关于js中数字的位数</h2><p>在 JavaScript 中，数字（无论是整数还是浮点数）在内存中的表示是 64 位双精度浮点数格式。 当使用 JavaScript 进行位运算（例如按位与、按位或等）时，操作数会临时被视为有符号的 32 位整数来处理，并按照这种格式进行计算。</p><h2 id="lane模型中的二进制表示" tabindex="-1"><a class="header-anchor" href="#lane模型中的二进制表示" aria-hidden="true">#</a> lane模型中的二进制表示</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> NoLanes<span class="token operator">=</span> <span class="token number">0b0000000000000000000000000000000</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> NoLane<span class="token operator">=</span><span class="token number">0b0000000000000000000000000000000</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> SyncHydrationLane <span class="token operator">=</span> <span class="token number">0b0000000000000000000000000000001</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> SyncLane <span class="token operator">=</span> <span class="token number">0b0000000000000000000000000000010</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二进制的计算-与、或、非、取反、异或、左移、右移" tabindex="-1"><a class="header-anchor" href="#二进制的计算-与、或、非、取反、异或、左移、右移" aria-hidden="true">#</a> 二进制的计算 （与、或、非、取反、异或、左移、右移...）</h2><p>我们主要掌握，与、或、取反</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//  与运算</span>
  <span class="token number">0b0000001000000000000000000000000</span>
<span class="token operator">&amp;</span> <span class="token number">0b0000010000000000000000000000000</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b0000000000000000000000000000000</span>
<span class="token comment">// 或运算</span>
  <span class="token number">0b0000001000000000000000000000000</span> <span class="token constant">A</span>
<span class="token operator">|</span> <span class="token number">0b0000010000000000000000000000000</span> <span class="token constant">B</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b0000011000000000000000000000000</span> <span class="token constant">C</span>
<span class="token comment">// 取反运算</span>
<span class="token operator">~</span> <span class="token number">0b0000001000000000000000000000000</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b1111110111111111111111111111111</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 案例一: 清除标记</span>
finishedWork<span class="token punctuation">.</span>flags <span class="token operator">&amp;=</span> <span class="token operator">~</span>Placement<span class="token punctuation">;</span>
<span class="token comment">//类比：C = C &amp; ~B</span>
  <span class="token number">0b0000011000000000000000000000000</span>  <span class="token constant">C</span>
<span class="token operator">&amp;</span> <span class="token number">0b1111101111111111111111111111111</span> <span class="token operator">~</span><span class="token constant">B</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b0000001000000000000000000000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 案例二：获取最右侧的1代表的值</span>
<span class="token constant">A</span> <span class="token operator">&amp;</span> <span class="token operator">-</span><span class="token constant">A</span>

<span class="token comment">// ～A</span>
～<span class="token number">0b0000011000000000000000000000000</span>   <span class="token constant">A</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b1111100111111111111111111111111</span> ～<span class="token constant">A</span>

<span class="token comment">// ～A + 1</span>
  <span class="token number">0b1111100111111111111111111111111</span>  ～<span class="token constant">A</span>
<span class="token operator">+</span> <span class="token number">0b0000000000000000000000000000001</span>   <span class="token number">1</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b0000001000000000000000000000000</span>   ～<span class="token constant">A</span> <span class="token operator">+</span> <span class="token number">1</span> 

<span class="token comment">// A &amp; （～A + 1）</span>
  <span class="token number">0b0000001000000000000000000000000</span>   ～<span class="token constant">A</span> <span class="token operator">+</span> <span class="token number">1</span> 
<span class="token operator">&amp;</span> <span class="token number">0b0000011000000000000000000000000</span>   <span class="token constant">A</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
  <span class="token number">0b0000001000000000000000000000000</span>   <span class="token constant">A</span> <span class="token operator">&amp;</span> （～<span class="token constant">A</span> <span class="token operator">+</span> <span class="token number">1</span>） <span class="token operator">===</span> <span class="token constant">A</span> <span class="token operator">&amp;</span> <span class="token operator">-</span><span class="token constant">A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),t=[o];function r(c,l){return a(),n("div",null,t)}const i=s(e,[["render",r],["__file","02.二进制基础计算.html.vue"]]);export{i as default};
