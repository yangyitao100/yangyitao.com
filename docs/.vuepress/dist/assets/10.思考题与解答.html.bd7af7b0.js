import{_ as l,r as a,o as n,c as r,b as e,d as t,e as c,f as s}from"./app.18acec2c.js";const d={},i=s('<h1 id="_10-思考题与解答" tabindex="-1"><a class="header-anchor" href="#_10-思考题与解答" aria-hidden="true">#</a> 10.思考题与解答</h1><p>同学们好，为了加深理解，同时也检验我们的学习效果，我设计了两个思考题：</p><ol><li>如果不用JSX，如何利用React在页面上渲染字符串“Hello JSX”</li><li>从源代码 <code>ReactDOM.render(&lt;div className=&#39;test-class&#39; style={{color: &#39;red&#39;}}&gt;Simple React App&lt;span&gt;xx1&lt;/span&gt;&lt;span&gt;xx2&lt;/span&gt;&lt;/div&gt;, document.getElementById(&#39;root&#39;))</code>到页面显示经历过了哪些关键步骤。</li></ol><blockquote><p>需要说明的是，我并没有去网上找现成的面试题，因为当对一个事物的理解达到一定深度，那些表面的面试题都会迎刃而解，建议大家学习其他东西的时候，也尽量不去背诵面试题，避免对时间的浪费，背诵本身就意味着流于表面，当然一些可以帮助启发我们对课程内容进行深度掌握的面试题，我也可能会和大家一块思考学习。</p></blockquote><h2 id="第一题" tabindex="-1"><a class="header-anchor" href="#第一题" aria-hidden="true">#</a> 第一题</h2><p><strong>如果不用JSX，如何利用React在页面上渲染字符串“Hello JSX”</strong></p>',6),_={href:"https://reactjs.org/docs/react-without-jsx.html",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"<div>Hello JSX</div>;",-1),p=e("code",null,"return React.createElement('div', null, 'Hello JSX');",-1),u=e("h2",{id:"第二题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#第二题","aria-hidden":"true"},"#"),t(" 第二题")],-1),m=e("p",null,[e("strong",null,[t("根据本章的学习，从JSX源代码（"),e("code",null,"<div>Hello JSX</div>"),t("）到显示到界面上，需要经历哪些关键环节")])],-1),x=e("p",null,"JSX -> 转译成函数调用 -> 执行函数调用返回虚拟DOM -> 将虚拟DOM转化成DOM -> 将生成的DOM挂载到DOM上 目前能思考到这些，说明本章的内容基本掌握，随着课程的深入，本题的答案会更加丰富。",-1);function f(S,g){const o=a("ExternalLinkIcon");return n(),r("div",null,[i,e("p",null,[t("我们在官方文档有"),e("a",_,[t("一篇文章"),c(o)]),t("进行了介绍。 这里，不用关心文档中类组件的写法，我们后续会介绍。这里表达的核心意思就是，不直接写JSX，而是手写JSX转化后的函数调用。 "),h,t("->"),p,t(" 这个转换的方式和原理已经在本章介绍过，就不在这里赘述。")]),u,m,x])}const X=l(d,[["render",f],["__file","10.思考题与解答.html.vue"]]);export{X as default};
