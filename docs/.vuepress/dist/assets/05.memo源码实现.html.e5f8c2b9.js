import{_ as n,o as s,c as a,f as p}from"./app.03bf752b.js";const t={},e=p(`<h1 id="_05-memo源码实现" tabindex="-1"><a class="header-anchor" href="#_05-memo源码实现" aria-hidden="true">#</a> 05.memo源码实现</h1><p>代码演化见视频，这里只呈现相关代码：</p><h2 id="react-js" tabindex="-1"><a class="header-anchor" href="#react-js" aria-hidden="true">#</a> react.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">REACT_ELEMENT</span><span class="token punctuation">,</span> <span class="token constant">REACT_FORWARD_REF</span><span class="token punctuation">,</span> <span class="token constant">REACT_MEMO</span><span class="token punctuation">,</span> toVNode<span class="token punctuation">,</span> shallowEqual <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span> <span class="token comment">///</span>

  <span class="token keyword">function</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> compare <span class="token operator">=</span> shallowEqual</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">///</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      $$<span class="token keyword">typeof</span><span class="token operator">:</span> <span class="token constant">REACT_MEMO</span><span class="token punctuation">,</span>
      type<span class="token punctuation">,</span>
      compare
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token keyword">const</span> React <span class="token operator">=</span> <span class="token punctuation">{</span>
    createElement<span class="token punctuation">,</span>
    Component<span class="token punctuation">,</span>
    createRef<span class="token punctuation">,</span>
    forwardRef<span class="token punctuation">,</span>
    PureComponent<span class="token punctuation">,</span>
    memo<span class="token comment">///</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="utils-js" tabindex="-1"><a class="header-anchor" href="#utils-js" aria-hidden="true">#</a> utils.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">REACT_MEMO</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;react.memo&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="react-dom-js" tabindex="-1"><a class="header-anchor" href="#react-dom-js" aria-hidden="true">#</a> react-dom.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">REACT_ELEMENT</span><span class="token punctuation">,</span> <span class="token constant">REACT_FORWARD_REF</span><span class="token punctuation">,</span> <span class="token constant">REACT_MEMO</span><span class="token punctuation">,</span> <span class="token constant">MOVE</span><span class="token punctuation">,</span> <span class="token constant">CREATE</span><span class="token punctuation">,</span> <span class="token constant">REACT_TEXT</span>  <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span> <span class="token comment">//</span>
<span class="token keyword">function</span> <span class="token function">createDOM</span><span class="token punctuation">(</span><span class="token parameter">VNode</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 1.创建元素 2.处理子元素 3.处理属性值</span>
    <span class="token comment">//...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&amp;&amp;</span> type<span class="token punctuation">.</span>$$<span class="token keyword">typeof</span> <span class="token operator">===</span> <span class="token constant">REACT_MEMO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//</span>
        <span class="token keyword">return</span> <span class="token function">getDomByMemoFunctionComponent</span><span class="token punctuation">(</span>VNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">deepDOMDiff</span><span class="token punctuation">(</span><span class="token parameter">oldVNode<span class="token punctuation">,</span> newVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> diffTypeMap <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token comment">//...</span>
        <span class="token constant">MEMO</span><span class="token operator">:</span> oldVNode<span class="token punctuation">.</span>type<span class="token punctuation">.</span>$$<span class="token keyword">typeof</span> <span class="token operator">===</span> <span class="token constant">REACT_MEMO</span> <span class="token comment">//</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token constant">DIFF_TYPE</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>diffTypeMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> diffTypeMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token constant">DIFF_TYPE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//....</span>
        <span class="token keyword">case</span> <span class="token string">&#39;MEMO&#39;</span><span class="token operator">:</span>
            <span class="token function">updateMemoFunctionComponent</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> newVNode<span class="token punctuation">)</span> <span class="token comment">//</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getDomByMemoFunctionComponent</span><span class="token punctuation">(</span><span class="token parameter">vNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">///</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> vNode<span class="token punctuation">;</span>
    <span class="token keyword">let</span> renderVNode <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>renderVNode<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    vNode<span class="token punctuation">.</span>oldRenderVdom <span class="token operator">=</span> renderVNode<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">createDOM</span><span class="token punctuation">(</span>renderVNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateMemoFunctionComponent</span><span class="token punctuation">(</span><span class="token parameter">oldVNode<span class="token punctuation">,</span> newVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">///</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> oldVNode<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>type<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>props<span class="token punctuation">,</span> newVNode<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> oldDOM <span class="token operator">=</span> <span class="token function">findDomByVNode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> newVNode<span class="token punctuation">;</span>
        <span class="token keyword">let</span> renderVNode <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>newVNode<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateDomTree</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>oldRenderVdom<span class="token punctuation">,</span> renderVNode<span class="token punctuation">,</span> oldDOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newVNode<span class="token punctuation">.</span>oldRenderVdom <span class="token operator">=</span> renderVNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        newVNode<span class="token punctuation">.</span>oldRenderVdom <span class="token operator">=</span> oldVNode<span class="token punctuation">.</span>oldRenderVdom<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","05.memo源码实现.html.vue"]]);export{d as default};
