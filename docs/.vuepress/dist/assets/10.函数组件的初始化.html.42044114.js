import{_ as n,o as s,c as a,f as e}from"./app.00462568.js";const t={},o=e(`<h1 id="_10-函数组件的初始化" tabindex="-1"><a class="header-anchor" href="#_10-函数组件的初始化" aria-hidden="true">#</a> 10.函数组件的初始化</h1><h2 id="packages-index-jsx" tabindex="-1"><a class="header-anchor" href="#packages-index-jsx" aria-hidden="true">#</a> packages/index.jsx</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRoot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-dom/client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">FunctionComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>课程名称：手写React高质量源码迈向高阶开发<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>讲师：杨艺韬<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>电子书：<span class="token operator">&lt;</span>a style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> href<span class="token operator">=</span><span class="token string">&quot;https://www.yangyitao.com/react18&quot;</span><span class="token operator">&gt;</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>yangyitao<span class="token punctuation">.</span>com<span class="token operator">/</span>react18<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>FunctionComponent<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;index.jsx&quot;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>FunctionComponent<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-reconciler-reactfiberbeginwork-js" tabindex="-1"><a class="header-anchor" href="#packages-react-reconciler-reactfiberbeginwork-js" aria-hidden="true">#</a> packages/react-reconciler/ReactFiberBeginWork.js</h2><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import { HostComponent, HostRoot, HostText,IndeterminateComponent, FunctionComponent } from &quot;./ReactWorkTags&quot;;
</span><span class="token prefix inserted">+</span><span class="token line"> import { renderWithHooks } from &#39;react-reconciler/src/ReactFiberHooks&#39;;
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">export function mountIndeterminateComponent(current, workInProgress, Component) {
</span><span class="token prefix inserted">+</span><span class="token line">  const props = workInProgress.pendingProps;
</span><span class="token prefix inserted">+</span><span class="token line">  const value = renderWithHooks(current, workInProgress, Component, props);
</span><span class="token prefix inserted">+</span><span class="token line">  workInProgress.tag = FunctionComponent;
</span><span class="token prefix inserted">+</span><span class="token line">  reconcileChildren(current, workInProgress, value);
</span><span class="token prefix inserted">+</span><span class="token line">  return workInProgress.child;
</span><span class="token prefix inserted">+</span><span class="token line">}
</span></span>
export function beginWork(current, workInProgress) {
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> switch (workInProgress.tag) {
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    case IndeterminateComponent:
</span><span class="token prefix inserted">+</span><span class="token line">      return mountIndeterminateComponent(current, workInProgress, workInProgress.type);
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   case HostRoot:
</span><span class="token prefix unchanged"> </span><span class="token line">     return updateHostRoot(current, workInProgress);
</span><span class="token prefix unchanged"> </span><span class="token line">   case HostComponent:
</span><span class="token prefix unchanged"> </span><span class="token line">     return updateHostComponent(current, workInProgress);
</span><span class="token prefix unchanged"> </span><span class="token line">   case HostText:
</span><span class="token prefix unchanged"> </span><span class="token line">     return null;
</span><span class="token prefix unchanged"> </span><span class="token line">   default:
</span><span class="token prefix unchanged"> </span><span class="token line">     return null;
</span><span class="token prefix unchanged"> </span><span class="token line"> }
</span></span>}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-reconciler-reactfiberhooks-js" tabindex="-1"><a class="header-anchor" href="#packages-react-reconciler-reactfiberhooks-js" aria-hidden="true">#</a> packages/react-reconciler/ReactFiberHooks.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderWithHooks</span><span class="token punctuation">(</span><span class="token parameter">current<span class="token punctuation">,</span> workInProgress<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">Component</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> children<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packages-react-reconciler-reactfibercommitwork-js" tabindex="-1"><a class="header-anchor" href="#packages-react-reconciler-reactfibercommitwork-js" aria-hidden="true">#</a> packages/react-reconciler/ReactFiberCommitWork.js</h2><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> import { HostComponent, HostRoot, HostText, FunctionComponent } from &quot;./ReactWorkTags&quot;;
</span></span>
export function commitMutationEffectsOnFiber(finishedWork, root) {
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> switch (finishedWork.tag) {
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    case FunctionComponent:
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   case HostRoot:
</span><span class="token prefix unchanged"> </span><span class="token line">   case HostComponent:
</span><span class="token prefix unchanged"> </span><span class="token line">   case HostText: {
</span><span class="token prefix unchanged"> </span><span class="token line">     recursivelyTraverseMutationEffects(root, finishedWork);
</span><span class="token prefix unchanged"> </span><span class="token line">     commitReconciliationEffects(finishedWork);
</span><span class="token prefix unchanged"> </span><span class="token line">     break;
</span><span class="token prefix unchanged"> </span><span class="token line">   }
</span><span class="token prefix unchanged"> </span><span class="token line"> }
</span></span>}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),p=[o];function i(c,r){return s(),a("div",null,p)}const d=n(t,[["render",i],["__file","10.函数组件的初始化.html.vue"]]);export{d as default};
